fq_target() {
    local -r target_registry=$1
    local -r target_slug=$2
    local -r target_os=$3
    local -r target_os_ver=$4
    printf \
        "%s/%s:%s_%s" \
        $target_registry \
        $target_slug \
        $target_os \
        $target_os_ver
}

write_dockerfile_helper () {
    local upstream_registry=$1
    local upstream_namespace=$2
    local upstream_repo=$3

    local os=$4
    local ver=$5

    local fq_upstream=${upstream_registry}/${upstream_namespace}/${upstream_repo}:${ver}
    if [ "${upstream_namespace}" = "" ];
    then
        fq_upstream=${upstream_registry}/${upstream_repo}:${ver}
    fi

    local dockerfile=Dockerfile.${os}_${ver}
    cat > $dockerfile <<EOF
FROM $fq_upstream
MAINTAINER "Andrew Rothstein" andrew.rothstein@gmail.com

ADD python3-install-lib python3-install-lib
ADD install.sh install.sh
RUN ./install.sh ${os}
EOF
    echo $dockerfile
}

write_dockerfile_simple () {
    local os=$1
    local os_ver=$2
    write_dockerfile_helper \
        docker.io \
        library \
        $os \
        $os \
        $os_ver
}

write_dockerfile_archlinux () {
    write_dockerfile_simple archlinux $1
}

write_dockerfile_alpine () {
    write_dockerfile_simple alpine $1
}

write_dockerfile_centos () {
    write_dockerfile_simple centos $1
}

write_dockerfile_debian () {
    write_dockerfile_simple debian $1
}

write_dockerfile_ubuntu () {
    write_dockerfile_simple ubuntu $1
}

write_dockerfile_fedora () {
    write_dockerfile_simple fedora $1
}

write_dockerfile_rockylinux() {
    write_dockerfile_simple rockylinux $1
}

write_dockerfile() {
    write_dockerfile_$1 $2
}

buildah_build() {
    local -r target_registry=$1
    local -r target_slug=$2
    local -r target_os=$3
    local -r target_os_ver=$4
    local -r dockerfile=$(write_dockerfile $target_os $target_os_ver)
    sudo \
        buildah \
        bud \
        -f $dockerfile \
        --build-arg HTTP_PROXY --build-arg HTTPS_PROXY --build-arg NO_PROXY \
        --build-arg http_proxy --build-arg https_proxy --build-arg no_proxy \
        -t $(fq_target $target_registry $target_slug $target_os $target_os_ver) \
        .
}

buildah_push() {
    local -r target_registry=$1
    local -r target_slug=$2
    local -r target_os=$3
    local -r target_os_ver=$4
    sudo \
        buildah \
        push \
        $(fq_target $target_registry $target_slug $target_os $target_os_ver)
}

buildah_tag_and_push() {
    local -r source_registry=$1
    local -r target_registry=$2
    local -r target_slug=$3
    local -r target_os=$4
    local -r target_os_ver=$5
    local -r s=$(fq_target $source_registry $target_slug $target_os $target_os_ver)
    local -r t=$(fq_target $target_registry $target_slug $target_os $target_os_ver)

    sudo buildah tag $s $t
    sudo buildah push $t
}
